.. This file is generated by utils/mkUserGuidePart

+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| Flag                                               | Description                                                                                          | Static/Dynamic                 | Reverse                                            |
+====================================================+======================================================================================================+================================+====================================================+
| ``-fconstraint-solver-iterations=⟨n⟩``             | *default: 4.* Set the iteration limit for the type-constraint solver. Typically one iteration        | dynamic                        |                                                    |
|                                                    | suffices; so please yell if you find you need to set it higher than the default. Zero means          |                                |                                                    |
|                                                    | infinity.                                                                                            |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-freduction-depth=⟨n⟩``                          | *default: 200.* Set the :ref:`limit for type simplification <undecidable-instances>`. Zero           | dynamic                        |                                                    |
|                                                    | means infinity.                                                                                      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-fcontext-stack=⟨n⟩``                            | Deprecated. Use ``-freduction-depth=⟨n⟩`` instead.                                                   | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-fglasgow-exts``                                 | Deprecated. Enable most language extensions; see :ref:`options-language` for exactly which           | dynamic                        | ``-fno-glasgow-exts``                              |
|                                                    | ones.                                                                                                |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-firrefutable-tuples``                           | Make tuple pattern matching irrefutable                                                              | dynamic                        | ``-fno-irrefutable-tuples``                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-fpackage-trust``                                | Enable :ref:`Safe Haskell <safe-haskell>` trusted package requirement for trustworthy modules.       | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-ftype-function-depth=⟨n⟩``                      | Deprecated. Use ``-freduction-depth=⟨n⟩`` instead.                                                   | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XAllowAmbiguousTypes``                          | Allow the user to write :ref:`ambiguous types <ambiguity>`, and the type inference engine to         | dynamic                        | ``-XNoAllowAmbiguousTypes``                        |
|                                                    | infer them.                                                                                          |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XArrows``                                       | Enable :ref:`arrow notation <arrow-notation>` extension                                              | dynamic                        | ``-XNoArrows``                                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XApplicativeDo``                                | Enable :ref:`Applicative do-notation desugaring <applicative-do>`                                    | dynamic                        | ``-XNoApplicativeDo``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XAutoDeriveTypeable``                           | As of GHC 7.10, this option is not needed, and should not be used. Previously this would             | dynamic                        | ``-XNoAutoDeriveTypeable``                         |
|                                                    | automatically :ref:`derive Typeable instances for every datatype and type class declaration          |                                |                                                    |
|                                                    | <deriving-typeable>`. Implies ``-XDeriveDataTypeable``.                                              |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XBangPatterns``                                 | Enable :ref:`bang patterns <bang-patterns>`.                                                         | dynamic                        | ``-XNoBangPatterns``                               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XBinaryLiterals``                               | Enable support for :ref:`binary literals <binary-literals>`.                                         | dynamic                        | ``-XNoBinaryLiterals``                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XCApiFFI``                                      | Enable :ref:`the CAPI calling convention <ffi-capi>`.                                                | dynamic                        | ``-XNoCAPIFFI``                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XConstrainedClassMethods``                      | Enable :ref:`constrained class methods <class-method-types>`.                                        | dynamic                        | ``-XNoConstrainedClassMethods``                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XConstraintKinds``                              | Enable a :ref:`kind of constraints <constraint-kind>`.                                               | dynamic                        | ``-XNoConstraintKinds``                            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XCPP``                                          | Enable the :ref:`C preprocessor <c-pre-processor>`.                                                  | dynamic                        | ``-XNoCPP``                                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDataKinds``                                    | Enable :ref:`datatype promotion <promotion>`.                                                        | dynamic                        | ``-XNoDataKinds``                                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDefaultSignatures``                            | Enable :ref:`default signatures <class-default-signatures>`.                                         | dynamic                        | ``-XNoDefaultSignatures``                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDeriveAnyClass``                               | Enable :ref:`deriving for any class <derive-any-class>`.                                             | dynamic                        | ``-XNoDeriveAnyClass``                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDeriveDataTypeable``                           | Enable ``deriving`` for the :ref:`Data class <deriving-typeable>`. Implied by                        | dynamic                        | ``-XNoDeriveDataTypeable``                         |
|                                                    | ``-XAutoDeriveTypeable``.                                                                            |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDeriveFunctor``                                | Enable :ref:`deriving for the Functor class <deriving-extra>`. Implied by                            | dynamic                        | ``-XNoDeriveFunctor``                              |
|                                                    | ``-XDeriveTraversable``.                                                                             |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDeriveFoldable``                               | Enable :ref:`deriving for the Foldable class <deriving-extra>`. Implied by                           | dynamic                        | ``-XNoDeriveFoldable``                             |
|                                                    | ``-XDeriveTraversable``.                                                                             |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDeriveGeneric``                                | Enable :ref:`deriving for the Generic class <deriving-typeable>`.                                    | dynamic                        | ``-XNoDeriveGeneric``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDeriveGeneric``                                | Enable :ref:`deriving for the Generic class <deriving-typeable>`.                                    | dynamic                        | ``-XNoDeriveGeneric``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDeriveLift``                                   | Enable :ref:`deriving for the Lift class <deriving-lift>`                                            | dynamic                        | ``-XNoDeriveLift``                                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDeriveTraversable``                            | Enable :ref:`deriving for the Traversable class <deriving-extra>`. Implies ``-XDeriveFunctor``       | dynamic                        | ``-XNoDeriveTraversable``                          |
|                                                    | and ``-XDeriveFoldable``.                                                                            |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XDisambiguateRecordFields``                     | Enable :ref:`record field disambiguation <disambiguate-fields>`. Implied by                          | dynamic                        | ``-XNoDisambiguateRecordFields``                   |
|                                                    | ``-XRecordWildCards``.                                                                               |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XEmptyCase``                                    | Allow :ref:`empty case alternatives <empty-case>`.                                                   | dynamic                        | ``-XNoEmptyCase``                                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XEmptyDataDecls``                               | Enable empty data declarations.                                                                      | dynamic                        | ``-XNoEmptyDataDecls``                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XExistentialQuantification``                    | Enable :ref:`existential quantification <existential-quantification>`.                               | dynamic                        | ``-XNoExistentialQuantification``                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XExplicitForAll``                               | Enable :ref:`explicit universal quantification <explicit-foralls>`. Implied by                       | dynamic                        | ``-XNoExplicitForAll``                             |
|                                                    | ``-XScopedTypeVariables``, ``-XLiberalTypeSynonyms``, ``-XRankNTypes`` and                           |                                |                                                    |
|                                                    | ``-XExistentialQuantification``.                                                                     |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XExplicitNamespaces``                           | Enable using the keyword ``type`` to specify the namespace of entries in imports and exports         | dynamic                        | ``-XNoExplicitNamespaces``                         |
|                                                    | (:ref:`explicit-namespaces`). Implied by ``-XTypeOperators`` and ``-XTypeFamilies``.                 |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XExtendedDefaultRules``                         | Use GHCi's :ref:`extended default rules <extended-default-rules>` in a normal module.                | dynamic                        | ``-XNoExtendedDefaultRules``                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XFlexibleContexts``                             | Enable :ref:`flexible contexts <flexible-contexts>`. Implied by ``-XImplicitParams``.                | dynamic                        | ``-XNoFlexibleContexts``                           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XFlexibleInstances``                            | Enable :ref:`flexible instances <instance-rules>`. Implies ``-XTypeSynonymInstances``. Implied       | dynamic                        | ``-XNoFlexibleInstances``                          |
|                                                    | by ``-XImplicitParams``.                                                                             |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XForeignFunctionInterface``                     | Enable :ref:`foreign function interface <ffi>`.                                                      | dynamic                        | ``-XNoForeignFunctionInterface``                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XFunctionalDependencies``                       | Enable :ref:`functional dependencies <functional-dependencies>`. Implies                             | dynamic                        | ``-XNoFunctionalDependencies``                     |
|                                                    | ``-XMultiParamTypeClasses``.                                                                         |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XGADTs``                                        | Enable :ref:`generalised algebraic data types <gadt>`. Implies ``-XGADTSyntax`` and                  | dynamic                        | ``-XNoGADTs``                                      |
|                                                    | ``-XMonoLocalBinds``.                                                                                |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XGADTSyntax``                                   | Enable :ref:`generalised algebraic data type syntax <gadt-style>`.                                   | dynamic                        | ``-XNoGADTSyntax``                                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XGeneralizedNewtypeDeriving``                   | Enable :ref:`newtype deriving <newtype-deriving>`.                                                   | dynamic                        | ``-XNoGeneralizedNewtypeDeriving``                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XGenerics``                                     | Deprecated, does nothing. No longer enables :ref:`generic classes <generic-classes>`. See also       | dynamic                        | ``-XNoGenerics``                                   |
|                                                    | GHC's support for :ref:`generic programming <generic-programming>`.                                  |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XImplicitParams``                               | Enable :ref:`Implicit Parameters <implicit-parameters>`. Implies ``-XFlexibleContexts`` and          | dynamic                        | ``-XNoImplicitParams``                             |
|                                                    | ``-XFlexibleInstances``.                                                                             |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNoImplicitPrelude``                            | Don't implicitly ``import Prelude``. Implied by ``-XRebindableSyntax``.                              | dynamic                        | ``-XImplicitPrelude``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XImpredicativeTypes``                           | Enable :ref:`impredicative types <impredicative-polymorphism>`. Implies ``-XRankNTypes``.            | dynamic                        | ``-XNoImpredicativeTypes``                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XIncoherentInstances``                          | Enable :ref:`incoherent instances <instance-overlap>`. Implies ``-XOverlappingInstances``.           | dynamic                        | ``-XNoIncoherentInstances``                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XInstanceSigs``                                 | Enable :ref:`instance signatures <instance-sigs>`.                                                   | dynamic                        | ``-XNoInstanceSigs``                               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XInterruptibleFFI``                             | Enable interruptible FFI.                                                                            | dynamic                        | ``-XNoInterruptibleFFI``                           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XKindSignatures``                               | Enable :ref:`kind signatures <kinding>`. Implied by ``-XTypeFamilies`` and ``-XPolyKinds``.          | dynamic                        | ``-XNoKindSignatures``                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XLambdaCase``                                   | Enable :ref:`lambda-case expressions <lambda-case>`.                                                 | dynamic                        | ``-XNoLambdaCase``                                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XLiberalTypeSynonyms``                          | Enable :ref:`liberalised type synonyms <type-synonyms>`.                                             | dynamic                        | ``-XNoLiberalTypeSynonyms``                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XMagicHash``                                    | Allow ``#`` as a :ref:`postfix modifier on identifiers <magic-hash>`.                                | dynamic                        | ``-XNoMagicHash``                                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XMonadComprehensions``                          | Enable :ref:`monad comprehensions <monad-comprehensions>`.                                           | dynamic                        | ``-XNoMonadComprehensions``                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XMonoLocalBinds``                               | Enable :ref:`do not generalise local bindings <mono-local-binds>`. Implied by                        | dynamic                        | ``-XNoMonoLocalBinds``                             |
|                                                    | ``-XTypeFamilies`` and ``-XGADTs``.                                                                  |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNoMonomorphismRestriction``                    | Disable the :ref:`monomorphism restriction <monomorphism>`.                                          | dynamic                        | ``-XMonomorphismRestriction``                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XMultiParamTypeClasses``                        | Enable :ref:`multi parameter type classes <multi-param-type-classes>`. Implied by                    | dynamic                        | ``-XNoMultiParamTypeClasses``                      |
|                                                    | ``-XFunctionalDependencies``.                                                                        |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XMultiWayIf``                                   | Enable :ref:`multi-way if-expressions <multi-way-if>`.                                               | dynamic                        | ``-XNoMultiWayIf``                                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNamedFieldPuns``                               | Enable :ref:`record puns <record-puns>`.                                                             | dynamic                        | ``-XNoNamedFieldPuns``                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNamedWildCards``                               | Enable :ref:`named wildcards <named-wildcards>`.                                                     | dynamic                        | ``-XNoNamedWildCards``                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNegativeLiterals``                             | Enable support for :ref:`negative literals <negative-literals>`.                                     | dynamic                        | ``-XNoNegativeLiterals``                           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNoNPlusKPatterns``                             | Disable support for ``n+k`` patterns.                                                                | dynamic                        | ``-XNPlusKPatterns``                               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNullaryTypeClasses``                           | Deprecated, does nothing. :ref:`nullary (no parameter) type classes <nullary-type-classes>` are      | dynamic                        | ``-XNoNullaryTypeClasses``                         |
|                                                    | now enabled using ``-XMultiParamTypeClasses``.                                                       |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNumDecimals``                                  | Enable support for 'fractional' integer literals.                                                    | dynamic                        | ``-XNoNumDecimals``                                |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XOverlappingInstances``                         | Enable :ref:`overlapping instances <instance-overlap>`.                                              | dynamic                        | ``-XNoOverlappingInstances``                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XOverloadedLists``                              | Enable :ref:`overloaded lists <overloaded-lists>`.                                                   | dynamic                        | ``-XNoOverloadedLists``                            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XOverloadedStrings``                            | Enable :ref:`overloaded string literals <overloaded-strings>`.                                       | dynamic                        | ``-XNoOverloadedStrings``                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XPackageImports``                               | Enable :ref:`package-qualified imports <package-imports>`.                                           | dynamic                        | ``-XNoPackageImports``                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XParallelArrays``                               | Enable parallel arrays. Implies ``-XParallelListComp``.                                              | dynamic                        | ``-XNoParallelArrays``                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XParallelListComp``                             | Enable :ref:`parallel list comprehensions <parallel-list-comprehensions>`. Implied by                | dynamic                        | ``-XNoParallelListComp``                           |
|                                                    | ``-XParallelArrays``.                                                                                |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XPartialTypeSignatures``                        | Enable :ref:`partial type signatures <partial-type-signatures>`.                                     | dynamic                        | ``-XNoPartialTypeSignatures``                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XPatternGuards``                                | Enable :ref:`pattern guards <pattern-guards>`.                                                       | dynamic                        | ``-XNoPatternGuards``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XPatternSynonyms``                              | Enable :ref:`pattern synonyms <pattern-synonyms>`.                                                   | dynamic                        | ``-XNoPatternSynonyms``                            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XPolyKinds``                                    | Enable :ref:`kind polymorphism <kind-polymorphism>`. Implies ``-XKindSignatures``.                   | dynamic                        | ``-XNoPolyKinds``                                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XPolymorphicComponents``                        | Enable :ref:`polymorphic components for data constructors <universal-quantification>`. Synonym       | dynamic                        | ``-XNoPolymorphicComponents``                      |
|                                                    | for ``-XRankNTypes``.                                                                                |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XPostfixOperators``                             | Enable :ref:`postfix operators <postfix-operators>`.                                                 | dynamic                        | ``-XNoPostfixOperators``                           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XQuasiQuotes``                                  | Enable :ref:`quasiquotation <th-quasiquotation>`.                                                    | dynamic                        | ``-XNoQuasiQuotes``                                |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XRank2Types``                                   | Enable :ref:`rank-2 types <universal-quantification>`. Synonym for ``-XRankNTypes``.                 | dynamic                        | ``-XNoRank2Types``                                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XRankNTypes``                                   | Enable :ref:`rank-N types <universal-quantification>`. Implied by ``-XImpredicativeTypes``.          | dynamic                        | ``-XNoRankNTypes``                                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XRebindableSyntax``                             | Employ :ref:`rebindable syntax <rebindable-syntax>`. Implies ``-XNoImplicitPrelude``.                | dynamic                        | ``-XNoRebindableSyntax``                           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XRecordWildCards``                              | Enable :ref:`record wildcards <record-wildcards>`. Implies ``-XDisambiguateRecordFields``.           | dynamic                        | ``-XNoRecordWildCards``                            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XRecursiveDo``                                  | Enable :ref:`recursive do (mdo) notation <recursive-do-notation>`.                                   | dynamic                        | ``-XNoRecursiveDo``                                |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XRelaxedPolyRec``                               | *(deprecated)* Relaxed checking for :ref:`mutually-recursive polymorphic functions                   | dynamic                        | ``-XNoRelaxedPolyRec``                             |
|                                                    | <typing-binds>`.                                                                                     |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XRoleAnnotations``                              | Enable :ref:`role annotations <role-annotations>`.                                                   | dynamic                        | ``-XNoRoleAnnotations``                            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XSafe``                                         | Enable the :ref:`Safe Haskell <safe-haskell>` Safe mode.                                             | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XScopedTypeVariables``                          | Enable :ref:`lexically-scoped type variables <scoped-type-variables>`.                               | dynamic                        | ``-XNoScopedTypeVariables``                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XStandaloneDeriving``                           | Enable :ref:`standalone deriving <stand-alone-deriving>`.                                            | dynamic                        | ``-XNoStandaloneDeriving``                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XStrictData``                                   | Enable :ref:`default strict datatype fields <strict-data>`.                                          | dynamic                        | ``-XNoStrictData``                                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XTemplateHaskell``                              | Enable :ref:`Template Haskell <template-haskell>`.                                                   | dynamic                        | ``-XNoTemplateHaskell``                            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XNoTraditionalRecordSyntax``                    | Disable support for traditional record syntax (as supported by Haskell 98) ``C {f = x}``             | dynamic                        | ``-XTraditionalRecordSyntax``                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XTransformListComp``                            | Enable :ref:`generalised list comprehensions <generalised-list-comprehensions>`.                     | dynamic                        | ``-XNoTransformListComp``                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XTrustworthy``                                  | Enable the :ref:`Safe Haskell <safe-haskell>` Trustworthy mode.                                      | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XTupleSections``                                | Enable :ref:`tuple sections <tuple-sections>`.                                                       | dynamic                        | ``-XNoTupleSections``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XTypeFamilies``                                 | Enable :ref:`type families <type-families>`. Implies ``-XExplicitNamespaces``,                       | dynamic                        | ``-XNoTypeFamilies``                               |
|                                                    | ``-XKindSignatures``, and ``-XMonoLocalBinds``.                                                      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XTypeOperators``                                | Enable :ref:`type operators <type-operators>`. Implies ``-XExplicitNamespaces``.                     | dynamic                        | ``-XNoTypeOperators``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XTypeSynonymInstances``                         | Enable :ref:`type synonyms in instance heads <flexible-instance-head>`. Implied by                   | dynamic                        | ``-XNoTypeSynonymInstances``                       |
|                                                    | ``-XFlexibleInstances``.                                                                             |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XUnboxedTuples``                                | Enable :ref:`unboxed tuples <unboxed-tuples>`.                                                       | dynamic                        | ``-XNoUnboxedTuples``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XUndecidableInstances``                         | Enable :ref:`undecidable instances <undecidable-instances>`.                                         | dynamic                        | ``-XNoUndecidableInstances``                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XUnicodeSyntax``                                | Enable :ref:`unicode syntax <unicode-syntax>`.                                                       | dynamic                        | ``-XNoUnicodeSyntax``                              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XUnliftedFFITypes``                             | Enable unlifted FFI types.                                                                           | dynamic                        | ``-XNoUnliftedFFITypes``                           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XUnsafe``                                       | Enable :ref:`Safe Haskell <safe-haskell>` Unsafe mode.                                               | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| ``-XViewPatterns``                                 | Enable :ref:`view patterns <view-patterns>`.                                                         | dynamic                        | ``-XNoViewPatterns``                               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+

